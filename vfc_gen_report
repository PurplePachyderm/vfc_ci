#!/usr/bin/env python3

# Look for and read all the run files in the current directory (ending with
# .vfcrun.json). It will then generate a "report.html" file.

import os
import json

import numpy as np
import pandas as pd

from bokeh.plotting import figure, show
from bokeh.resources import INLINE
from bokeh.embed import components

from jinja2 import Environment, FileSystemLoader


    # Look for all run files in current directory and read them

print("Looking for run files...")

run_files = [ f for f in os.listdir(".") if f.endswith(".vfcrun.hd5") ]

# These are arrays of Pandas dataframes for now
metadata = []
data = []

for f in run_files:
    metadata.append(pd.read_hdf(f, "metadata"))
    data.append(pd.read_hdf(f, "data"))

metadata = pd.concat(metadata).sort_index()
data = pd.concat(data).sort_index()

print(metadata)
print(data)



    # Generate the Bokeh plots

print("[TODO] Generating plots...")

# Dummy Bokeh plot
x = [1, 2, 3, 4, 5]
y = [6, 7, 2, 4, 5]
# create a new plot with a title and axis labels
p1 = figure(title="Simple line example", x_axis_label="x", y_axis_label="y")
# add a line renderer with legend and line thickness
p1.line(x, y, legend_label="Temp.", line_width=2)



    # Render Jinja2 template

print("[TODO] Rendering report file...")

env = Environment(loader=FileSystemLoader("."))
template = env.get_template("report.j2")

bokeh_js = INLINE.render_js()
bokeh_css = INLINE.render_css()

plots = {
    "plot1": p1
}
bokeh_script, plots = components(plots)

render = template.render(arg="world",
                         bokeh_js=bokeh_js,
                         bokeh_css=bokeh_css,
                         bokeh_script=bokeh_script,
                         plots=plots)



    # Write file

with open("report.html", "w") as fh:
    fh.write(render)

print()
print("The report has been successfully written to \"report.html\".")
